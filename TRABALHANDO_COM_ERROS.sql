CREATE OR ALTER PROCEDURE SPE_NOTIFICAR_HORAS_EXTRAS @P_DATA_REFERENCIA DATE,
														@QTED_EVENTOS INT OUTPUT
AS
BEGIN
	IF EOMONTH(@P_DATA_REFERENCIA) = @P_DATA_REFERENCIA
	BEGIN;
		--RAISERROR('O ÚLTIMO DIA DO MÊS NÃO PODE GERAR AVISOS!', 11, 1)
		THROW 50000, 'O ÚLTIMO DIA DO MÊS NÃO PODE GERAR AVISOS!', 1;
		PRINT 'O ERRO FOI ARREMESSADO'
	END
	SET NOCOUNT ON;
	DECLARE CR_FUNCIONARIOS CURSOR FOR
		SELECT DATA, [NOME FUNCIONÁRIO], [HORAS TRABALHADAS] 
			FROM VW_PONTO_FUNCIONARIOS
			WHERE DATA = @P_DATA_REFERENCIA;
	IF OBJECT_ID(N'TEMPDB..#HORAS_EXTRAS') IS NULL
	BEGIN
		--CRIANDO A TABELA TEMPORARIA
		CREATE TABLE #HORAS_EXTRAS
		(
			NOME_FUNCIONARIO VARCHAR(70),
			DATA_EVENTO DATE,
			HORAS_TRABALHADAS CHAR(8)
		)
	END

	ELSE
	BEGIN
		--LIMPANDO A TABELA TEMPORARIA
		DELETE FROM #HORAS_EXTRAS;
	END;
--DECLARANDO AS VARIAVEIS QUE IRÃO RECEBER OS VALORES DO CURSOR
DECLARE @DATA DATE;
DECLARE @NOME_FUNCIONARIO VARCHAR(70);
DECLARE @HORAS_TRABALHADAS CHAR(8);
DECLARE @TEMPO_TRABALHADO INT;
--ABRINDO O CURSOR
OPEN CR_FUNCIONARIOS;
FETCH NEXT FROM CR_FUNCIONARIOS
	INTO @DATA, @NOME_FUNCIONARIO, @HORAS_TRABALHADAS;
WHILE @@FETCH_STATUS = 0
BEGIN
	SET @TEMPO_TRABALHADO = DATEPART(SECOND, CONVERT(TIME(0), @HORAS_TRABALHADAS)) + 
							DATEPART(MINUTE, CONVERT(TIME(0), @HORAS_TRABALHADAS)) * 60 +
							DATEPART(HOUR,CONVERT(TIME(0), @HORAS_TRABALHADAS)) * 3600
	IF @TEMPO_TRABALHADO > 8 * 60 * 60
	BEGIN
		INSERT INTO #HORAS_EXTRAS(NOME_FUNCIONARIO, DATA_EVENTO, HORAS_TRABALHADAS)
			VALUES(@NOME_FUNCIONARIO, @DATA, @HORAS_TRABALHADAS)
	END
	FETCH NEXT FROM CR_FUNCIONARIOS
	INTO @DATA, @NOME_FUNCIONARIO, @HORAS_TRABALHADAS;
END;
--FECHANDO O CURSOR
CLOSE CR_FUNCIONARIOS;
--DESALOCANDO O CURSOR
DEALLOCATE CR_FUNCIONARIOS;
INSERT INTO AVS_AVISOS_FUNCIONARIOS (
AVS_NOME_FUNCIONARIO, AVS_DATA_AVISO, AVS_HORAS_TRABALHADAS) 
SELECT NOME_FUNCIONARIO, DATA_EVENTO, HORAS_TRABALHADAS
	FROM #HORAS_EXTRAS
SELECT @QTED_EVENTOS = COUNT(*) FROM AVS_AVISOS_FUNCIONARIOS;
SET NOCOUNT OFF;
END;

SELECT * FROM DBO.VW_PONTO_FUNCIONARIOS;

DECLARE @QTED_HORAS_EXTRAS INT;
BEGIN TRAN
BEGIN TRY
	INSERT INTO LOG_LOGS(LOG_EVENTO) VALUES ('SPE_NOTIFICAR_HORAS_EXTRAS VAI SER CHAMADA');
	EXEC DBO.SPE_NOTIFICAR_HORAS_EXTRAS '2017-02-28', @QTED_EVENTOS = @QTED_HORAS_EXTRAS OUTPUT;
	SELECT @QTED_HORAS_EXTRAS AS [QUANTIDADE DE EVENTOS];
	INSERT INTO LOG_LOGS(LOG_EVENTO) VALUES ('SPE_NOTIFICAR_HORAS_EXTRAS FOI CHAMADA');
	COMMIT;
END TRY
BEGIN CATCH
	ROLLBACK;
	PRINT 'HOUVE UM ERRO AO REALIZAR O PROCESSAMENTO'
	PRINT ERROR_MESSAGE();
	PRINT 'SEVERIDADE: '
	PRINT ERROR_SEVERITY();
	PRINT 'ESTADO: '
	PRINT ERROR_STATE();
END CATCH

CREATE TABLE LOG_LOGS
(
	LOG_ID INT IDENTITY(1,1) PRIMARY KEY,
	LOG_EVENTO VARCHAR(300)
)


SELECT * FROM LOG_LOGS;