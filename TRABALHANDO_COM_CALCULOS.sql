--SELECIONANDO O BANCO
USE MeuRH;

--FAZENDO UMA COMMON TABLE 
WITH DADOS_PONTO(DIFERENCIA_SEGUNDOS, DATA, FUN_ID) AS
(
	SELECT DATEDIFF(SECOND, PAC_DATA_INICIAL, PAC_DATA_FINAL) AS [DIFERENCIA EM SEGUNDOS], 
		CONVERT(DATE,PAC_DATA_INICIAL) AS DATA,
		FUN_ID
		FROM PAC_PONTOS_ACESSOS
	) 

SELECT DADOS_PONTO.DATA,
	   CONCAT(FUN.FUN_SOBRENOME, ', ', FUN.FUN_NOME) AS [NOME FUNCIONÁRIO],
	   (
		FORMAT(SUM(DADOS_PONTO.DIFERENCIA_SEGUNDOS) /   3600, '00') + ':' + 
		FORMAT((SUM(DADOS_PONTO.DIFERENCIA_SEGUNDOS) %  3600)/60, '00') + ':' +
		FORMAT(((SUM(DADOS_PONTO.DIFERENCIA_SEGUNDOS) % 3600)%60), '00')
	   ) AS [HORAS TRABALHADAS]
FROM DADOS_PONTO
	INNER JOIN FUN_FUNCIONARIOS AS FUN
	ON DADOS_PONTO.FUN_ID = FUN.FUN_ID
	GROUP BY DADOS_PONTO.DATA, CONCAT(FUN.FUN_SOBRENOME, ', ', FUN.FUN_NOME)
	ORDER BY DADOS_PONTO.DATA;

WITH DADOS_PONTO(DIFERENCIA_SEGUNDOS, DATA, FUN_ID) AS
(
	SELECT DATEDIFF(SECOND, PAC_DATA_INICIAL, PAC_DATA_FINAL) AS [DIFERENCIA EM SEGUNDOS], 
		CONVERT(DATE,PAC_DATA_INICIAL) AS DATA,
		FUN_ID
		FROM PAC_PONTOS_ACESSOS
	) 
SELECT MIN(DIFERENCIA_SEGUNDOS), MAX() 
FROM DADOS_PONTO;

--TRAZENDO AS DIFERENÇAS EM SEGUNDOS DOS FUNCIONARIOS
WITH DADOS_PONTO(DIFERENCIA_SEGUNDOS, DATA, FUN_ID) AS
(
	SELECT DATEDIFF(SECOND, PAC_DATA_INICIAL, PAC_DATA_FINAL) AS [DIFERENCIA EM SEGUNDOS], 
		CONVERT(DATE,PAC_DATA_INICIAL) AS DATA,
		FUN_ID
		FROM PAC_PONTOS_ACESSOS
	) 
SELECT FUN_ID, DIFERENCIA_SEGUNDOS
FROM DADOS_PONTO
WHERE DIFERENCIA_SEGUNDOS IN(SELECT MIN(DIFERENCIA_SEGUNDOS) FROM DADOS_PONTO) OR
DIFERENCIA_SEGUNDOS IN(SELECT MAX(DIFERENCIA_SEGUNDOS) FROM DADOS_PONTO);


--CRIANDO FUNÇÃO
CREATE FUNCTION FN_CALCULA_HORA(@P_QTDE_SEGUNDOS INT)
RETURNS VARCHAR(8) AS
BEGIN
	RETURN	FORMAT(@P_QTDE_SEGUNDOS /   3600, '00') + ':' + 
			FORMAT((@P_QTDE_SEGUNDOS% 3600)/60, '00') + ':' +
			FORMAT(((@P_QTDE_SEGUNDOS % 3600)%60), '00')
END;

--FAZENDO TESTE DA FUNÇÃO
WITH DADOS_PONTO(DIFERENCIA_SEGUNDOS, DATA, FUN_ID) AS
(
	SELECT DATEDIFF(SECOND, PAC_DATA_INICIAL, PAC_DATA_FINAL) AS [DIFERENCIA EM SEGUNDOS], 
		CONVERT(DATE,PAC_DATA_INICIAL) AS DATA,
		FUN_ID
		FROM PAC_PONTOS_ACESSOS
	) 

SELECT DADOS_PONTO.DATA,
	   CONCAT(FUN.FUN_SOBRENOME, ', ', FUN.FUN_NOME) AS [NOME FUNCIONÁRIO],
	   DBO.FN_CALCULA_HORA(SUM(DADOS_PONTO.DIFERENCIA_SEGUNDOS)) AS [HORAS TRABALHADAS]
	  
FROM DADOS_PONTO
	INNER JOIN FUN_FUNCIONARIOS AS FUN
	ON DADOS_PONTO.FUN_ID = FUN.FUN_ID
	GROUP BY DADOS_PONTO.DATA, CONCAT(FUN.FUN_SOBRENOME, ', ', FUN.FUN_NOME)
	ORDER BY DADOS_PONTO.DATA;

--ALTERANDO A FUNÇÃO
ALTER FUNCTION FN_CALCULA_HORA(@P_QTDE_SEGUNDOS INT)
RETURNS VARCHAR(8) AS
BEGIN
	DECLARE @RESULTADO VARCHAR(8);--DECLARANDO VARIAVEL
	SET @RESULTADO = FORMAT(@P_QTDE_SEGUNDOS /   3600, '00') + ':';
	SET @RESULTADO = @RESULTADO + FORMAT((@P_QTDE_SEGUNDOS% 3600)/60, '00') + ':';
	SET @RESULTADO = @RESULTADO + FORMAT(((@P_QTDE_SEGUNDOS % 3600)%60), '00');
	RETURN	@RESULTADO;			
END;

--DELETANDO FUNÇÃO
DROP FUNCTION FN_CALCULA_HORA;

--CRIANDO OUTRA FUNÇÃO QUE RETORNA TABELA
CREATE FUNCTION FN_DADOS_PONTO()
RETURNS TABLE AS
RETURN  SELECT DATEDIFF(SECOND, PAC_DATA_INICIAL, PAC_DATA_FINAL) AS DIFERENCA_SEGUNDOS, 
		CONVERT(DATE,PAC_DATA_INICIAL) AS DATA,
		FUN_ID
		FROM PAC_PONTOS_ACESSOS;

DROP FUNCTION FN_DADOS_PONTO;

--TESTANDO A FUNÇÃO
SELECT DADOS_PONTO.DATA,
	   CONCAT(FUN.FUN_SOBRENOME, ', ', FUN.FUN_NOME) AS [NOME FUNCIONÁRIO],
	   DBO.FN_CALCULA_HORA(SUM(DADOS_PONTO.DIFERENCA_SEGUNDOS)) AS [HORAS TRABALHADAS]
FROM dbo.FN_DADOS_PONTO(DEFAULT) AS DADOS_PONTO
	INNER JOIN FUN_FUNCIONARIOS AS FUN
	ON FUN.FUN_ID = DADOS_PONTO.FUN_ID
	GROUP BY DADOS_PONTO.DATA, CONCAT(FUN.FUN_SOBRENOME, ', ', FUN.FUN_NOME)
	ORDER BY DADOS_PONTO.DATA;
--CRIANDO A FUNÇÃO 
CREATE FUNCTION FN_DADOS_PONTO(@P_FUN_ID INT = NULL ) 
RETURNS @RESULTADO TABLE
(
	DIFERENCA_SEGUNDOS INT,
	DATA DATE,
	FUN_ID INT
) AS
BEGIN
	--PERGUNTANDO SE O PARAMETRO É NULO
	IF @P_FUN_ID IS NULL
	BEGIN
		INSERT INTO @RESULTADO SELECT DATEDIFF(SECOND, PAC_DATA_INICIAL, PAC_DATA_FINAL) AS DIFERENCA_SEGUNDOS, 
								CONVERT(DATE,PAC_DATA_INICIAL) AS DATA,
								FUN_ID
								FROM PAC_PONTOS_ACESSOS;
	END

	ELSE
	BEGIN
		INSERT INTO @RESULTADO SELECT DATEDIFF(SECOND, PAC_DATA_INICIAL, PAC_DATA_FINAL) AS DIFERENCA_SEGUNDOS, 
								CONVERT(DATE,PAC_DATA_INICIAL) AS DATA,
								FUN_ID
								FROM PAC_PONTOS_ACESSOS
								WHERE FUN_ID = @P_FUN_ID;
	END;
	RETURN; 
END;

--ALTERANDO A FUNÇÃO PARA UM PARAMETRO NÃO OBRIGATÓRIO
ALTER FUNCTION FN_DADOS_PONTO(@P_FUN_ID INT = NULL ) 
RETURNS @RESULTADO TABLE
(
	DIFERENCA_SEGUNDOS INT,
	DATA DATE,
	FUN_ID INT
) AS
BEGIN
	--PERGUNTANDO SE O PARAMETRO É NULO
	IF @P_FUN_ID IS NULL
	BEGIN
		INSERT INTO @RESULTADO SELECT DATEDIFF(SECOND, PAC_DATA_INICIAL, PAC_DATA_FINAL) AS DIFERENCA_SEGUNDOS, 
								CONVERT(DATE,PAC_DATA_INICIAL) AS DATA,
								FUN_ID
								FROM PAC_PONTOS_ACESSOS;
	END

	ELSE
	BEGIN
		INSERT INTO @RESULTADO SELECT DATEDIFF(SECOND, PAC_DATA_INICIAL, PAC_DATA_FINAL) AS DIFERENCA_SEGUNDOS, 
								CONVERT(DATE,PAC_DATA_INICIAL) AS DATA,
								FUN_ID
								FROM PAC_PONTOS_ACESSOS
								WHERE FUN_ID = @P_FUN_ID;
	END;
	RETURN; 
END;

--SELECIONANDO DADOS DA FUNÇÃO COM PARAMETRO
SELECT * FROM DBO.FN_DADOS_PONTO(1);

--SELECIONANDO DADOS DA FUNÇÃO SEM PARAMETRO
SELECT * FROM DBO.FN_DADOS_PONTO(DEFAULT);

--TRABALHANDO COM VIEWS
--CRIANDO UMA VIEW
CREATE VIEW VW_PONTO_FUNCIONARIOS AS 
SELECT DADOS_PONTO.DATA,
	   CONCAT(FUN.FUN_SOBRENOME, ', ', FUN.FUN_NOME) AS [NOME FUNCIONÁRIO],
	   DBO.FN_CALCULA_HORA(SUM(DADOS_PONTO.DIFERENCA_SEGUNDOS)) AS [HORAS TRABALHADAS]
FROM dbo.FN_DADOS_PONTO(DEFAULT) AS DADOS_PONTO
	INNER JOIN FUN_FUNCIONARIOS AS FUN
	ON FUN.FUN_ID = DADOS_PONTO.FUN_ID
	GROUP BY DADOS_PONTO.DATA, CONCAT(FUN.FUN_SOBRENOME, ', ', FUN.FUN_NOME);

--SELECIONANDO VIEW
SELECT * FROM VW_PONTO_FUNCIONARIOS
ORDER BY DATA;